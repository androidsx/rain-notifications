apply plugin: 'com.android.application'

android {
    compileSdkVersion 20
    buildToolsVersion '20.0.0'

    defaultConfig {
        applicationId "com.androidsx.rainnotifications.dailyclothes"
        minSdkVersion 19
        targetSdkVersion 20
        versionCode 2
        versionName "0.2"
    }
    signingConfigs {
        release {
            Properties props = getEnvironmentSettings();
            storeFile file(props.get('storeFile', "./"))
            storePassword props.get('storePassword')
            keyAlias props.get('keyAlias')
            keyPassword props.get('keyPassword')
        }
    }
    buildTypes {
        debug {
            runProguard false
        }
        /**
         * To generate a signed APK, just execute {@code ./gradlew clean assembleRelease} as usual,
         * and be sure to have a {@code gradle.properties} file in the root folder like this:
         *
         * <pre>
           storeFile=../../PATH_OUTSIDE_OF_PROJECT_FOLDER
           storePassword=XXX
           keyAlias=XXX
           keyPassword=XXX
         * </pre>
         */
        release {
            Properties props = getEnvironmentSettings();
            if (!props.isEmpty() && props.containsKey('storeFile')) {
                println 'Going to sign with ' + props.get('storeFile')
                signingConfig signingConfigs.release
            } else {
                println 'Won\'t sign release'
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.squareup.picasso:picasso:2.3.4'

    compile project(':common-library')
    compile project(':model')
    compile project(':background-service')
    compile project(':alert-generator')
    compile project(':weather-client-api')
    compile project(':weather-client-factory')
}

Properties getEnvironmentSettings() {
    Properties props = new Properties()
    InputStream fis;
    try {
        fis = new FileInputStream(new File('./gradle.properties'))
        props.load(fis)
    } catch (FileNotFoundException e) {
        println 'No property file.'
    } finally {
        if (null != fis) {
            fis.close()
        }
    }
    return props;
}